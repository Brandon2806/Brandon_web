// Clase Producto
class Producto {
  constructor(nombre, precio, cantidad) {
    this.nombre = nombre;
    this.precio = precio;
    this.cantidad = cantidad;
  }
}

// Clase CarritoDeCompras
class CarritoDeCompras {
  constructor() {
    this.productos = [];
  }

  agregarProducto(producto) {
    this.productos.push(producto);
  }

  eliminarProducto(nombreProducto) {
    this.productos = this.productos.filter(producto => producto.nombre !== nombreProducto);
  }

  modificarProducto(nombreProducto, nuevaCantidad) {
    const producto = this.productos.find(producto => producto.nombre === nombreProducto);
    if (producto) {
      producto.cantidad = nuevaCantidad;
    }
  }

  aplicarDescuento(nombreProducto, porcentajeDescuento) {
    const producto = this.productos.find(producto => producto.nombre === nombreProducto);
    if (producto) {
      producto.precio -= producto.precio * (porcentajeDescuento / 100);
    }
  }

  generarResumen() {
    let totalCompra = 0;
    console.log("Resumen de la compra:");
    this.productos.forEach(producto => {
      const totalProducto = producto.precio * producto.cantidad;
      totalCompra += totalProducto;
      console.log(`${producto.nombre}: ${producto.cantidad} x $${producto.precio.toFixed(2)} = $${totalProducto.toFixed(2)}`);
    });
    console.log(`Total general: $${totalCompra.toFixed(2)}`);
  }
}

// Ejemplo de uso
const carrito = new CarritoDeCompras();
const producto1 = new Producto("Laptop", 999, 1);
const producto2 = new Producto("Mouse", 20, 2);

carrito.agregarProducto(producto1);
carrito.agregarProducto(producto2);

carrito.aplicarDescuento("Laptop", 10); // Aplicar un 10% de descuento a la Laptop
carrito.modificarProducto("Mouse", 3); // Modificar la cantidad de Mouse a 3

carrito.generarResumen(); // Generar el resumen de la compra

carrito.eliminarProducto("Laptop"); // Eliminar la Laptop del carrito
carrito.generarResumen(); // Generar el resumen de la compra actualizado
